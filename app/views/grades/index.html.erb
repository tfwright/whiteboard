<style>
  .student {
    min-width:100px;
    border-right:dotted 1px black;
  }
  .assignment {
    min-width:60px;
    max-width:60px;
    white-space:nowrap;
    overflow:hidden;
  }
  th {
    padding: 0 5px;
  }
  .editable {
    width:60px;
    min-width:60px;
    max-width:60px;
    text-align:center;
  }
  <% if current_user.is_a?(Professor) %>
  .editable:hover {
    background-color:yellow;
  }
  <% end %>
  tr {
    height:40px;
  }
</style>
<script>
  <% if current_user.is_a?(Professor) %>

      function hideGradeForm(form, score){
        $(form).hide();
        $("input", form).unbind("blur");
        $("input", form).blur();
        $("span.grade", $(form).parents("td")).text(score);
        $("span.grade", $(form).parents("td")).show();
      }
  
      function showGradeForm(form){
        $(form).show();
        $("span", $(form).parents("td")).hide();
        $("input", form).focus();
        $("input", form).blur(function(event){
          $(form).submit();
        });
      }
  
      function newGradeSuccessHandler(event, grade, status) {
        var gradeJSON = $.parseJSON(grade)
        hideGradeForm(event.target, gradeJSON.score);
        $(event.target).attr("action", gradeJSON.update_url)
        $(event.target).attr("method", "put")
        $("input[type=hidden]", event.target).remove();
        $(event.target).unbind("ajax:success")
        $(event.target).bind("ajax:success", updateGradeSuccessHandler);
      };

      function updateGradeSuccessHandler(event, grade, status){
        hideGradeForm(event.target, $.parseJSON(grade).score);
      };
  
      $(document).ready(function() {
        $("form").hide();
        $("td.editable").each(function(i, td){
          $(td).click(function(event){
            showGradeForm($("form", td));
          });
          if($("span.grade", td).text() == "--") { 
            $("form", td).bind("ajax:success", newGradeSuccessHandler);
          } else {
            $("form", td).bind("ajax:success", updateGradeSuccessHandler);
          };
          $("form", td).bind("ajax:failure", function(event, grade, status){
            alert("There was an error: " + grade.responseText);
            $("input", td).focus();
          });
        });
      });
      
      function weightingForm(){
				$('#weighting-popup').modal({containerCss: {'background-color':'#fff','width': 500, 'height': 600}});
        $.getJSON("<%= course_assignments_path(@current_course, :format => :js) %>", function(assignments){
          $('#weighting-chart-loader').hide();
          Assignments = $(assignments);
          WeightingChart = Raphael("weighting-chart");
          var StartX = 250;
          var StartY = 250;
          var radius = 200;
          WeightingChart.customAttributes.slice = function (x, y, r, a1, a2) {
             var flag = (a2 - a1) > 180,
                 clr = (a2 - a1) / 360;
             a1 = (a1 % 360) * Math.PI / 180;
             a2 = (a2 % 360) * Math.PI / 180;
             return {
                 path: [["M", x, y], ["l", r * Math.cos(a1), r * Math.sin(a1)], ["A", r, r, 0, +flag, 1, x + r * Math.cos(a2), y + r * Math.sin(a2)], ["z"]],
                 fill: "hsb(" + clr + ", .75, .8)"
             };
          };

          function animate(ms) {
             var start = 0,
                 val;
             for (i = 0; i < Assignments.length; i++) {
                 val = 360 / total * Assignments[i].weight;
                 paths[i].animate({slice: [StartX, StartY, radius, start, start += val]}, ms || 1500, "bounce");
                 paths[i].angle = start - val / 2;
             }
          }

          var paths = WeightingChart.set(),
             total,
             start,
             bg = WeightingChart.circle(StartX, StartY, 0).attr({stroke: "#000", "stroke-width": 4});
          Assignments = Assignments.sort(function(a, b) { return b.weight - a.weight;});

          total = 100;
          start = 0;
          for (i = 0; i < Assignments.length; i++) {
            var val = 360 / total * Assignments[i].weight;
            (function(i, val) {
              paths.push(WeightingChart.path().attr({slice: [StartX, StartY, 1, start, start + val], stroke: "#000"}).click(function() {
                var assignment = Assignments[i];
                if(assignment == Assignments.last()[0]) {
                  var nextAssignment = Assignments.first()[0];
                } else {
                  var nextAssignment = Assignments[i+1];
                }
                if(nextAssignment.weight > 5) {
                  assignment.weight += 5;
                  nextAssignment.weight -= 5;
                  animate();
                };
              }));
            })(i, val);
            start += val;
          }
          bg.animate({r: radius}, 1000, "bounce");
          animate(1000);
        });
      };
    
  <% else %>

    $(document).ready(function() {
      $("form").remove();
    });
  
  <% end %>
</script>
<%= render :partial => "courses/header" %>
<% if @current_course.assignments.any? %>
  <p>
    All assignments are listed below.
  </p>
  <% if current_user.is_a?(Professor) %>
    <div style="margin:10px 0">
      <%= link_to "#", :class => "grey-button pcb", :id => "weighting-button" do %>
        <span>Change grade weighting</span>
      <% end %>
    </div>
    <script>
      $('#weighting-button').click(function(event){
        weightingForm();
        event.preventDefault();
      });
    </script>
  <% end %>
  <div style="width:100%;overflow-x:auto">
    <table class="draggable" id="grade-table">
      <tr>
        <th class="student">Student</th>
        <% @current_course.assignments.each do |assignment| %>
          <th class="assignment" title="<%= assignment.name %>"><%= assignment.name %></th>
        <% end %>
        <% if current_user.is_a?(Professor) %>
          <th class="total">Overall</th>
        <% end %>
      </tr>
      <% @students.each do |student| %>
        <tr>
          <td class="student"><%= student.name %></td>
          <% @current_course.assignments.each do |assignment| %>
            <td id="student-<%= student.id %>-assign-<%= assignment.id %>" class="editable">
                <% if grade = student.grades.first(:conditions => {:assignment_id => assignment.id}) %>
                  <span class="grade"><%= grade.score %></span>
                  <%= form_for(grade, :url => course_grade_path(@current_course, grade, :format => :js), :remote => true) do |f| %>
                    <%= f.text_field :score, :size => 3, :style => "width:auto" %>
                  <% end %>
                <% else %>
                  <span class="grade">--</span>
                  <%= form_for(Grade.new, :url => course_grades_path(@current_course, :format => :js), :remote => true) do |f| %>
                    <%= f.text_field :score, :size => 3, :style => "width:auto" %>
                    <%= f.hidden_field :assignment_id, :value => assignment.id %>
                    <%= f.hidden_field :student_id, :value => student.id %>
                  <% end %>
                <% end %>
            </td>
          <% end %>
          <% if current_user.is_a?(Professor) %>
            <td><%= student.grades.average(:score).round %></td>
          <% end %>
        </tr>
      <% end %>
    </table>
  </div>
<% else %>
<p>
  You don't have any graded assignments yet.  Would you like to <%= link_to "add one", new_course_assignment_path(@current_course) %>?
</p>
<% end %>
<div id="weighting-popup" style="display:none">
  <h3>Grade weighting</h3>
  <img src="/images/ajax-loader.gif" id="weighting-chart-loader"/>
  <div id="weighting-chart" style="height:500px"></div>
  <div align="center">
    <%= submit_tag "Save", :style => "font-size:5em", :id => "weighting-form-submit" %>
    <script>
      $("#weighting-form-submit").click(function(event){
        $.ajax({
          url: '<%= adjust_weighting_course_assignments_path(@current_course) %>',
          type: 'PUT',
          data: $.param({weighting:$.map(Assignments,function(a){return {id:a.id, weight:a.weight}})}),
          loading: function(){
            $('#weighting-form-submit').attr('disabled', 'disabled');
          },
          error: function(){
            alert("There was an error saving your weighting settings.  Please report this with the feedback link and try again later.")
          },
          success: function(){
            $('#weighting-form-submit').attr('disabled', '');
            $.modal.close();
          }
        });
        event.preventDefault();
      });
    </script>
  </div>
</div>